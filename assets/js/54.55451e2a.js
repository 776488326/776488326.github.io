(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{365:function(t,a,s){"use strict";s.r(a);var v=s(7),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"正则断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则断言"}},[t._v("#")]),t._v(" 正则断言")]),t._v(" "),a("h2",{attrs:{id:"单词边界"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单词边界"}},[t._v("#")]),t._v(" 单词边界")]),t._v(" "),a("ul",[a("li",[t._v("在需要限制边界的单词左右加 \\b 即可")]),t._v(" "),a("li",[t._v("\\btom 表示以tom开头，tom\\b 表示以tom结尾")])]),t._v(" "),a("h2",{attrs:{id:"字符串的边界"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的边界"}},[t._v("#")]),t._v(" 字符串的边界")]),t._v(" "),a("ul",[a("li",[t._v("在需要限制的字符串边界使用\\A和\\z")])]),t._v(" "),a("h2",{attrs:{id:"行的边界"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行的边界"}},[t._v("#")]),t._v(" 行的边界")]),t._v(" "),a("ul",[a("li",[t._v("匹配的文本内容出现在一行的开头和结束 使用$，^")]),t._v(" "),a("li",[t._v("^表示一行的开头，$表示一行的结束")]),t._v(" "),a("li",[t._v("(?m)来指明是单行匹配还是多行匹配")])]),t._v(" "),a("h2",{attrs:{id:"环视-内容边界"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环视-内容边界"}},[t._v("#")]),t._v(" 环视（内容边界）")]),t._v(" "),a("ul",[a("li",[t._v("匹配的内容前后需要满足的规则，(?<!1)")]),t._v(" "),a("li",[t._v("< 表示左边界，！表示不等于")]),t._v(" "),a("li",[t._v("单词边界用环视无效")]),t._v(" "),a("li",[t._v("环视虽然有括号，和匹配规则，但是其只匹配位置，不匹配内容")])]),t._v(" "),a("h2",{attrs:{id:"注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意点"}},[t._v("#")]),t._v(" 注意点")]),t._v(" "),a("ul",[a("li",[t._v("\\w 表示字母数字下划线")]),t._v(" "),a("li",[t._v("\\W 表示非\\w，但是并不包括行的开头结尾")])])])}),[],!1,null,null,null);a.default=_.exports}}]);