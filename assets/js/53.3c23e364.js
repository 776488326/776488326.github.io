(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{362:function(t,a,s){"use strict";s.r(a);var r=s(7),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"元字符匹配模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元字符匹配模式"}},[t._v("#")]),t._v(" 元字符匹配模式")]),t._v(" "),a("ul",[a("li",[t._v("在匹配元字符时，根据匹配模式的不同，产生不同的行为")])]),t._v(" "),a("h2",{attrs:{id:"不区分大小写模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不区分大小写模式"}},[t._v("#")]),t._v(" 不区分大小写模式")]),t._v(" "),a("ul",[a("li",[t._v("(?i) 在元字符前使用括号来指定当前元字符的模式")])]),t._v(" "),a("h2",{attrs:{id:"点号通配模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#点号通配模式"}},[t._v("#")]),t._v(" 点号通配模式")]),t._v(" "),a("ul",[a("li",[t._v("(?s). 匹配所有的字符，也可使用[\\s\\S]｜[\\d\\D]d|[\\w\\W]")])]),t._v(" "),a("h2",{attrs:{id:"多行匹配模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多行匹配模式"}},[t._v("#")]),t._v(" 多行匹配模式")]),t._v(" "),a("ul",[a("li",[t._v("(?m) 匹配多行，^，$匹配整个文本的开头和结尾，而不是每行的开头结尾")])]),t._v(" "),a("h2",{attrs:{id:"注释模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释模式"}},[t._v("#")]),t._v(" 注释模式")]),t._v(" "),a("ul",[a("li",[t._v("(?# 注释内容)，用于解释元字符的含义，便于理解")])])])}),[],!1,null,null,null);a.default=e.exports}}]);